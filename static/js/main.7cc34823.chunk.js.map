{"version":3,"sources":["components/Phonebook/Phonebook.module.css","components/FilterInput/FilterInput.module.css","components/Container/Container.module.css","redux/contacts/contactsSlice.js","components/Form/Form.js","components/Container/Container.js","redux/selectors.js","components/Phonebook/Contact.js","components/Phonebook/Phonebook.js","redux/contacts/filterSlice.js","components/FilterInput/FilterInput.js","App.js","redux/store.js","index.js","components/Form/Form.module.css"],"names":["module","exports","contactApi","createApi","reducerPath","baseQuery","fetchBaseQuery","baseUrl","tagTypes","endpoints","builder","fetchContacts","query","providesTags","deleteContact","mutation","contactId","url","method","invalidatesTags","createContact","contactContent","body","useFetchContactsQuery","useDeleteContactMutation","useCreateContactMutation","Form","onSubmit","items","useState","name","setName","number","setNumber","contacts","data","onChangeInput","e","currentTarget","value","reset","className","s","form","preventDefault","findName","find","contact","Notiflix","Notify","failure","labels","input","type","onChange","pattern","title","required","button","Container","children","getFilter","state","filter","Contact","id","isDeleting","isLoading","onClick","disabled","color","height","width","Phonebook","allContacts","isFetching","filterValue","useSelector","toLowerCase","includes","contactList","loader","timeout","sort","a","b","map","filterSlice","createSlice","initialState","reducers","action","payload","actions","FilterInput","dispatch","useDispatch","label","App","store","configureStore","reducer","middleware","getDefaultMiddleware","setupListeners","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7cc34823.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"name\":\"Phonebook_name__2t9eT\",\"contactList\":\"Phonebook_contactList__1shda\",\"number\":\"Phonebook_number__-O59o\",\"button\":\"Phonebook_button__3Kom2\",\"loader\":\"Phonebook_loader__2iimM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"FilterInput_filter__dbefC\",\"input\":\"FilterInput_input__2ygU6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"Container_Container__v9-YR\"};","import { createApi, fetchBaseQuery } from \"@reduxjs/toolkit/query/react\";\r\n\r\nexport const contactApi = createApi({\r\n  reducerPath: \"contactApi\",\r\n  baseQuery: fetchBaseQuery({\r\n    baseUrl: \"https://616ae6b616e7120017fa1120.mockapi.io/api/v1/\",\r\n  }),\r\n  tagTypes: [\"Contact\"],\r\n  endpoints: (builder) => ({\r\n    fetchContacts: builder.query({\r\n      query: () => \"/contacts\",\r\n      providesTags: [\"Contact\"],\r\n    }),\r\n    deleteContact: builder.mutation({\r\n      query: (contactId) => ({\r\n        url: `/contacts/${contactId}`,\r\n        method: \"DELETE\",\r\n      }),\r\n      invalidatesTags: [\"Contact\"],\r\n    }),\r\n    createContact: builder.mutation({\r\n      query: (contactContent) => ({\r\n        url: \"/contacts\",\r\n        method: \"POST\",\r\n        body: contactContent,\r\n      }),\r\n      invalidatesTags: [\"Contact\"],\r\n    }),\r\n  }),\r\n});\r\n\r\nexport const {\r\n  useFetchContactsQuery,\r\n  useDeleteContactMutation,\r\n  useCreateContactMutation,\r\n} = contactApi;\r\n","import { useState } from \"react\";\r\nimport s from \"./Form.module.css\";\r\nimport {\r\n  useFetchContactsQuery,\r\n  useCreateContactMutation,\r\n} from \"redux/contacts/contactsSlice\";\r\nimport Notiflix from \"notiflix\";\r\n\r\nconst Form = ({ onSubmit, items }) => {\r\n  const [name, setName] = useState(\"\");\r\n  const [number, setNumber] = useState(\"\");\r\n  const { data: contacts } = useFetchContactsQuery();\r\n  const [createContact] = useCreateContactMutation();\r\n\r\n  const onSubmitForm = (e) => {\r\n    e.preventDefault();\r\n    const findName = contacts.find((contact) => contact.name === name);\r\n    if (findName) {\r\n      Notiflix.Notify.failure(`${findName.name} is already in contacts`);\r\n      reset();\r\n      return;\r\n    }\r\n    createContact({ name, number });\r\n    reset();\r\n  };\r\n\r\n  const onChangeInput = (e) => {\r\n    const { name, value } = e.currentTarget;\r\n    switch (name) {\r\n      case \"name\":\r\n        setName(value);\r\n        break;\r\n\r\n      case \"number\":\r\n        setNumber(value);\r\n        break;\r\n\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const reset = () => {\r\n    setName(\"\");\r\n    setNumber(\"\");\r\n  };\r\n\r\n  return (\r\n    <form className={s.form} onSubmit={onSubmitForm}>\r\n      <div className={s.labels}>\r\n        <label className={s.name}>\r\n          Name\r\n          <input\r\n            className={s.input}\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={name}\r\n            onChange={onChangeInput}\r\n          />\r\n        </label>\r\n        <label className={s.name}>\r\n          Number\r\n          <input\r\n            className={s.input}\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            value={number}\r\n            onChange={onChangeInput}\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n            required\r\n          />\r\n        </label>\r\n      </div>\r\n      <button className={s.button} type=\"submit\" key=\"submitBtn\">\r\n        Add contact\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n","import React from 'react';\r\nimport s from './Container.module.css';\r\n\r\nexport default function Container({ children }) {\r\n  return <div className={s.Container}>{children}</div>;\r\n}\r\n","export const getFilter = (state) => state.filter;\r\nexport const getVisibleContacts = (allContacts, filter) => {\r\n  const normalizedFilter = filter.toLowerCase();\r\n  return allContacts.filter((contact) =>\r\n    contact.name.toLowerCase().includes(normalizedFilter)\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport s from \"./Phonebook.module.css\";\r\nimport { useDeleteContactMutation } from \"redux/contacts/contactsSlice\";\r\nimport Loader from \"react-loader-spinner\";\r\n\r\nexport default function Contact({ name, number, id }) {\r\n  const [deleteContact, { isLoading: isDeleting }] = useDeleteContactMutation();\r\n  return (\r\n    <>\r\n      {name}: <span className={s.number}> {number} </span>\r\n      <button\r\n        className={s.button}\r\n        onClick={() => deleteContact(id)}\r\n        disabled={isDeleting}\r\n      >\r\n        {isDeleting && (\r\n          <Loader type=\"Puff\" color=\"#00BFFF\" height={12} width={12} />\r\n        )}\r\n        Delete\r\n      </button>\r\n    </>\r\n  );\r\n}\r\n\r\nContact.propTypes = {\r\n  name: PropTypes.string,\r\n  number: PropTypes.string,\r\n  id: PropTypes.string,\r\n};\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport {\r\n  useFetchContactsQuery\r\n} from \"redux/contacts/contactsSlice\";\r\nimport { getFilter } from \"redux/selectors\";\r\nimport Contact from \"./Contact\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\nimport s from \"./Phonebook.module.css\";\r\n\r\nconst Phonebook = () => {\r\n  const { data: allContacts, isFetching } = useFetchContactsQuery();\r\n  // const [deleteContact] = useDeleteContactMutation();\r\n  const filterValue = useSelector((state) => getFilter(state));\r\n  const contacts = allContacts?.filter((contact) =>\r\n    contact.name.toLowerCase().includes(filterValue.toLowerCase())\r\n  );\r\n\r\n  return (\r\n    <ul className={s.contactList}>\r\n      {isFetching && (\r\n        <div className={s.loader}>\r\n          <Loader\r\n            type=\"Puff\"\r\n            color=\"#00BFFF\"\r\n            height={50}\r\n            width={50}\r\n            timeout={3000}\r\n          />\r\n        </div>\r\n      )}\r\n      {allContacts &&\r\n        contacts\r\n          .sort((a, b) => (a.name > b.name ? 1 : -1))\r\n          .map(({ id, name, number }) => (\r\n            <li className={s.name} key={id}>\r\n              <Contact\r\n                id={id}\r\n                name={name}\r\n                number={number}\r\n              />\r\n            </li>\r\n          ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default Phonebook;\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst initialState = \"\";\r\n\r\nconst filterSlice = createSlice({\r\n  name: \"contacts/filter\",\r\n  initialState,\r\n  reducers: {\r\n    filter: (state, action) => (state = action.payload),\r\n  },\r\n});\r\nexport const { filter } = filterSlice.actions;\r\nexport default filterSlice.reducer;\r\n","import React from \"react\";\r\nimport s from \"./FilterInput.module.css\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getFilter } from \"../../redux/selectors\";\r\nimport { filter } from \"../../redux/contacts/filterSlice\";\r\n\r\nconst FilterInput = () => {\r\n  const dispatch = useDispatch();\r\n  const filterValue = useSelector((state) => getFilter(state));\r\n  const changeFilter = (e) => {\r\n    dispatch(filter(e.currentTarget.value));\r\n  };\r\n\r\n  return (\r\n    <div className={s.filter}>\r\n      <label className={s.label}>\r\n        Find contacts by name\r\n        <input\r\n          className={s.input}\r\n          type=\"text\"\r\n          name=\"filter\"\r\n          value={filterValue}\r\n          onChange={changeFilter}\r\n        />\r\n      </label>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FilterInput;\r\n","// import { useState, useEffect } from 'react';\nimport Form from './components/Form';\nimport Container from './components/Container';\nimport Phonebook from './components/Phonebook';\nimport FilterInput from './components/FilterInput';\nimport './App.css';\n\nexport default function App() {\n  return (\n    <Container>\n      <h1> Phonebook </h1>\n      <Form />\n      <h2> Contacts </h2>\n      <FilterInput />\n      <Phonebook />\n    </Container>\n  );\n}\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport { setupListeners } from \"@reduxjs/toolkit/query\";\r\nimport { contactApi } from \"./contacts/contactsSlice\";\r\nimport filter from \"./contacts/filterSlice\";\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    [contactApi.reducerPath]: contactApi.reducer,\r\n    filter,\r\n  },\r\n  middleware: (getDefaultMiddleware) => [\r\n    ...getDefaultMiddleware(),\r\n    contactApi.middleware,\r\n  ],\r\n});\r\n\r\nsetupListeners(store.dispatch);\r\n\r\n// import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\n// import logger from 'redux-logger';\r\n// import {\r\n//   persistStore,\r\n//   persistReducer,\r\n//   FLUSH,\r\n//   REHYDRATE,\r\n//   PAUSE,\r\n//   PERSIST,\r\n//   PURGE,\r\n//   REGISTER,\r\n// } from 'redux-persist';\r\n// import storage from 'redux-persist/lib/storage';\r\n// import contactsReducer from './contacts/contacts-reducer';\r\n\r\n// const ContactsPersistConfig = {\r\n//   key: 'contacts',\r\n//   storage,\r\n//   blacklist: ['filter'],\r\n// };\r\n\r\n// const middleware = [\r\n//   ...getDefaultMiddleware({\r\n//     serializableCheck: {\r\n//       ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n//     },\r\n//   }),\r\n//   logger,\r\n// ];\r\n\r\n// const store = configureStore({\r\n//   reducer: {\r\n//     contacts: persistReducer(ContactsPersistConfig, contactsReducer),\r\n//   },\r\n//   middleware,\r\n//   devTools: process.env.NODE_ENV === 'development',\r\n// });\r\n\r\n// const persistor = persistStore(store);\r\n\r\n// export default { store, persistor };\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { store } from \"./redux/store\";\nimport \"modern-normalize/modern-normalize.css\";\nimport { Provider } from \"react-redux\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__wAKAd\",\"labels\":\"Form_labels__3EPG2\",\"name\":\"Form_name__o_RPW\",\"input\":\"Form_input__1pkSg\",\"button\":\"Form_button__6RGw1\"};"],"sourceRoot":""}